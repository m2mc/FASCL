<?php

namespace fascli\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * clientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class clientRepository extends EntityRepository
{

  public function RechercheClient($nomprenoms){
    
    $qb = $this->createQueryBuilder('c');
   $qb ->where('c.nomprenoms     = :np')
       ->setParameter('np', $nomprenoms);
   return $qb->getQuery()
            ->getResult();
}


  public function OperationsduClient($id,$type){
    
    $qb = $this->createQueryBuilder('c');
   $qb ->addOrderBy('c.id', "DESC")
       ->setMaxResults($nbre);
   return $qb->getQuery()
            ->getResult();
}

  public function derniersClients($nbre){
    
    $qb = $this->createQueryBuilder('c');
   $qb ->addOrderBy('c.id', "DESC")
       ->setMaxResults($nbre);
   return $qb->getQuery()
            ->getResult();
}

   public function CltsNesAujourdhui(){
    $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datnaissance)     = :maintenantd')
    ->setParameter('maintenantd', $nowd)
    ->andwhere('MONTH(c.datnaissance) = :maintenantm')
    ->setParameter('maintenantm', $nowm);
   return $qb->getQuery()
            ->getResult();
}

public function CltsNesDemain(){
    $tomorrow = new \DateTime();
    $tomorrowd = $tomorrow->format('d');
    $tomorrowm = $tomorrow->format('m');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datnaissance) = :demaind')
    ->setParameter('demaind', $tomorrowd+1)
    ->andwhere('MONTH(c.datnaissance) = :demainm')
    ->setParameter('demainm', $tomorrowm);
   return $qb->getQuery()
            ->getResult();
}

   

	public function findnomsLike( $term, $limit = 10 )
{
 
	$qb = $this->createQueryBuilder('c');
	$qb ->select('c.nomprenoms')
	->where('c.nomprenoms LIKE :term')
	->setParameter('term', '%'.$term.'%')
	->setMaxResults($limit);
 
	$arrayAss= $qb->getQuery()
	->getArrayResult();
 
	// Transformer le tableau associatif en un tableau standard
	$array = array();
	foreach($arrayAss as $data)
	{
		$array[] = array("nomprenoms"=>$data['nomprenoms']);
	}
 
	return $array;
}

public function toutClient()
{
 
    $qb = $this->createQueryBuilder('c');
   $qb ->addOrderBy('c.nom', "ASC");
   return $qb->getQuery()
            ->getResult();
}


public function getClientAvecoperations()
{
  $qb = $this->createQueryBuilder('a')
             ->leftJoin('a.operation', 'c')
             ->addSelect('c')
             ->addOrderBy('a.nom', "ASC");

  return $qb->getQuery()
            ->getResult();
}

}
