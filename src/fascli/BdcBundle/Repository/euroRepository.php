<?php

namespace fascli\BdcBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * euroRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class euroRepository extends EntityRepository
{
	public function geForEuros($clientId)
    {
        
        $qb = $this->createQueryBuilder('a')
                   ->select('a')
                   ->where('a.operationbdc_id = :client_id')
                   ->addOrderBy('a.id',"ASC")
                   ->setParameter('client_id', $clientId);
           
        return $qb->getQuery()
                  ->getResult();
    }
    public function getLignesForEuros($OperationId)
    {
        
        $qb = $this->createQueryBuilder('a')
                   ->select('a')
                   ->where('a.operationbdc = :id')
                   ->setParameter('id', $OperationId)
                   ->addOrderBy('a.id',"ASC");
           
        return $qb->getQuery()
                  ->getResult();
    }

    public function getAchatsDeviseCoupure($devise, $coupure, $datope){
     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
     $qb = $this->_em->createQueryBuilder();
    $qb->select('e') 
    ->from('fascliBdcBundle:euro', 'e')
    ->InnerJoin('e.operationbdc', 'o')
    ->addSelect('o')
    ->where('e.type = :typ')
    ->setParameter('typ', 'A')
    ->andwhere('e.val = :val')
    ->setParameter('val', $coupure)
    ->andwhere('o.devise= :dev')
    ->setParameter('dev', $devise)
    ->andwhere('o.datope <= :dat')
    ->setParameter('dat', $datope)
    ->andwhere('e.qterest > :qte')
    ->setParameter('qte', '0');
     $bbb = $qb->getQuery()
            ->getArrayResult();

     return $bbb;
  }

  public function getVentesDeviseCoupure($devise, $coupure){
     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
     $qb = $this->_em->createQueryBuilder();
    $qb->select('e') 
    ->from('fascliBdcBundle:euro', 'e')
    ->InnerJoin('e.operationbdc', 'o')
    ->addSelect('o')
    ->where('e.type = :typ')
    ->setParameter('typ', 'V')
    ->andwhere('e.val = :val')
    ->setParameter('val', $coupure)
    ->andwhere('o.devise= :dev')
    ->setParameter('dev', $devise)
    ->andwhere('e.qterest > :qte')
    ->setParameter('qte', '0');
     $bbb = $qb->getQuery()
            ->getArrayResult();

     return $bbb;
  }

public function getV(){
     $qb = $this->createQueryBuilder('a')
                   ->select('a')
                   ->addOrderBy('a.id',"DESC");
           
        return $qb->getQuery()->getArrayResult();
                       
  }


}
