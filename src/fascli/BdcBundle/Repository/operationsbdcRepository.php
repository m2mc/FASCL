<?php

namespace fascli\BdcBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * operationsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class operationsbdcRepository extends EntityRepository
{
    public function eee(){

      $q = $this->createQueryBuilder('p')
          ->select('COUNT(p)');
      return $q->getQuery()->getSingleScalarResult();
    }

    public function caissierachateuros($caissier){

	 $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'ACHAT')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'EURO');
   return $qb->getQuery()
            ->getResult();

  }

  public function caissierventeeuros($caissier){

	 $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'VENTE')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'EURO');
   return $qb->getQuery()
            ->getResult();

  }

  public function caissierachatdollars($caissier){

     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'ACHAT')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'DOLLAR');
   return $qb->getQuery()
            ->getResult();

  }

  public function caissierventedollars($caissier){

     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'VENTE')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'DOLLAR');
   return $qb->getQuery()
            ->getResult();

  }

  public function caissierachatgbps($caissier){

     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'ACHAT')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'GBP');
   return $qb->getQuery()
            ->getResult();

  }

  public function caissierventegbps($caissier){

     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'VENTE')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'GBP');
   return $qb->getQuery()
            ->getResult();

  }

  public function caissierachatsuisses($caissier){

     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'ACHAT')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'SUISSE');
   return $qb->getQuery()
            ->getResult();

  }

  public function caissierventesuisses($caissier){

     $now = new \DateTime();
    $nowd = $now->format('d');
    $nowm = $now->format('m');
    $nowy = $now->format('Y');
    $qb = $this->createQueryBuilder('c');
   $qb ->where('DAY(c.datope) = :nowd')
    ->setParameter('nowd', $nowd)
    ->andwhere('MONTH(c.datope) = :nowm')
    ->setParameter('nowm', $nowm)
    ->andwhere('YEAR(c.datope) = :nowy')
    ->setParameter('nowy', $nowy)
    ->andwhere('c.caissier= :cai')
    ->setParameter('cai', $caissier)
    ->andwhere('c.typope= :typ')
    ->setParameter('typ', 'VENTE')
    ->andwhere('c.devise= :dev')
    ->setParameter('dev', 'SUISSE');
   return $qb->getQuery()
            ->getResult();

  }
    
    

}
